<script>
    

    $('.side-bar-toggle').click(function () {

        if ($('.left').css('display') == 'none') {
            $('.right').animate({ width: '80%' }, 350);
            $('.left').css('display', 'block').animate({ width: '20%' }, 350);
            $('.dashboard').css('display', "block").animate({ width: "1400px" }, 350);
        }
        else {
            $('.right').animate({ width: '100%' }, 350);
            $('.left').css('display', 'block').animate({ width: '0' }, 350);
            $('.left').css('display', 'none');
            $('.dashboard').css('display', "block").animate({ width: "1500px" }, 350);
        }
    });

    $(".sidebar-select").off().on('click', function (event) {
        $(event.target).toggleClass("option-selected");
        if ($(event.target).hasClass("option-selected")) {
            $(event.target).attr("selected", true);
        } else {
            $(event.target).removeAttr("selected");
        }
        event.preventDefault();
    });

    // create an array based on location selections
    // get a response and..
    // update the .right panel
    $("#location-filter-btn").on('click', function () {
        // create an array
        var locations = [];
        $($("#location-selector")).children().each(function (e) {
            if ($(this).attr("selected") == "selected") {
                locations.push($(this).val());
            }
        });
        console.log(locations);
        if (locations.length == 0) {
            return;
        }
        // call pjax
        $.pjax({
            type: 'POST',
            url: "/Default/Sellers/ByLocation",
            container: ".right",
            data: { "locations": locations },
        });
    });

    $("#category-filter-btn").on('click', function () {
        var categories = [];
        $($("#seller-category-selector")).children().each(function (e) {
            if ($(this).attr("selected") == "selected") {
                categories.push($(this).val());
            }
        });
        console.log(categories);
        if (categories.length == 0) {
            return;
        }
        // set jquery ajax settings traditional to true
        // call pjax
        $.pjax({
            type: 'POST',
            url: "/Default/Sellers/ByCategory",
            container: ".right",
            data: { "categories": categories },
        });
    });


    $("#product-category-filter-btn").on('click', function () {
        var categories = [];
        $($("#product-category-selector")).children().each(function (e) {
            if ($(this).attr("selected") == "selected") {
                categories.push($(this).val());
            }
        });
        console.log(categories);
        if (categories.length == 0) {
            return;
        }
        // set jquery ajax settings traditional to true
        // call pjax
        $.pjax({
            type: 'POST',
            url: "/Default/Products/ByCategory",
            container: ".right",
            data: { "categories": categories },
        });
    });

    $('a[withpjax]').each(function () {
        
        $(this).pjax(
            {
                container: ".right",
            }
        );
    });

    $(".dashboard").each(function () {
        /**
* Created by Kupletsky Sergey on 16.09.14.
*
* Hierarchical timing
* Add specific delay for CSS3-animation to elements.
*/

        (function ($) {
            var speed = 2000;
            var container = $('.display-animation');
            container.each(function () {
                var elements = $(this).children();
                elements.each(function () {
                    var elementOffset = $(this).offset();
                    var offset = elementOffset.left * 0.8 + elementOffset.top;
                    var delay = parseFloat(offset / speed).toFixed(2);
                    $(this)
                        .css("-webkit-animation-delay", delay + 's')
                        .css("-o-animation-delay", delay + 's')
                        .css("animation-delay", delay + 's')
                        .addClass('animated');
                });
            });
        })(jQuery);

        /**
     * Created by Kupletsky Sergey on 04.09.14.
     *http://codepen.io/zavoloklom/pen/wtApI
     * Ripple-effect animation
     * Tested and working in: ?IE9+, Chrome (Mobile + Desktop), ?Safari, ?Opera, ?Firefox.
     * JQuery plugin add .ink span in element with class .ripple-effect
     * Animation work on CSS3 by add/remove class .animate to .ink span
    */

        (function ($) {
            $(".ripple-effect").click(function (e) {
                var rippler = $(this);

                // create .ink element if it doesn't exist
                if (rippler.find(".ink").length == 0) {
                    rippler.append("<span class='ink'></span>");
                }

                var ink = rippler.find(".ink");

                // prevent quick double clicks
                ink.removeClass("animate");

                // set .ink diametr
                if (!ink.height() && !ink.width()) {
                    var d = Math.max(rippler.outerWidth(), rippler.outerHeight());
                    ink.css({ height: d, width: d });
                }

                // get click coordinates
                var x = e.pageX - rippler.offset().left - ink.width() / 2;
                var y = e.pageY - rippler.offset().top - ink.height() / 2;

                // set .ink position and add class .animate
                ink.css({
                    top: y + 'px',
                    left: x + 'px'
                }).addClass("animate");
            })
        })(jQuery);
    });

    $(".btn-pick").on('click', function (event) {
        console.log("add to cart");
        var productId;
        var unitPrice;
        var productName;
        var currency;

        productId = $(this).attr("product-id")
        unitPrice = $(this).attr("unit-price");
        productName = $(this).attr("product-name");
        EnterpriseId = $(this).attr("Enterprise-id");

        $("#add-to-cart-form input[name=UnitPrice]").val(unitPrice);
        $("#add-to-cart-form input[name=UnitPrice]").attr("disabled", "true");

        $("#add-to-cart-form input[name=ProductId]").val(productId);
        $("#add-to-cart-form input[name=ProductName]").val(productName);
        $("#add-to-cart-form input[name=EnterpriseId]").val(EnterpriseId);
        $("#add-to-cart-form input[name=Quantity]").val(1).removeAttr("disabled");
        $("#add-to-cart-form input[name=SubTotal]").val(unitPrice);
        $("#add-to-cart-form button").removeAttr("disabled");
        
        $("#add-to-cart-form input[name=Quantity]").on('keyup change', function () {
            // get the quantity and unit price and multiply -> update subtotal box
            var quantity = $(this).val();
            var unitprice = $("#add-to-cart-form input[name=UnitPrice]").val();
            var subtotal = quantity * unitprice;

            $("#add-to-cart-form input[name=SubTotal]").val(subtotal);
        });
        $("#add-to-cart-form").on('submit', function (event) {
            var Product = getFormInputValues("add-to-cart-form");
            var EnterpriseId = $("#add-to-cart-form input[name=EnterpriseId]").val();
            addToRetailOrder(Product, EnterpriseId);
            $("#add-to-cart-form").find('input, textarea, button, select').attr('disabled', 'disabled');
            event.preventDefault();
        });
        $("#add-to-order-modal").modal("show");
        event.preventDefault();
    });


    $(".btn-add-to-cart").on('click', function (event) {
        console.log("add to cart");
        var productId;
        var unitPrice;
        var productName;
        var currency;

        productId = $(this).attr("product-id")
        unitPrice = $(this).attr("unit-price");
        productName = $(this).attr("product-name");
        EnterpriseId = $(this).attr("Enterprise-id");

        $("#add-to-cart-form input[name=UnitPrice]").val(unitPrice).removeAttr("disabled");
        $("#add-to-cart-form input[name=ProductId]").val(productId);
        $("#add-to-cart-form input[name=ProductName]").val(productName);
        $("#add-to-cart-form input[name=EnterpriseId]").val(EnterpriseId);
        $("#add-to-cart-form input[name=Quantity]").val(1).removeAttr("disabled");
        $("#add-to-cart-form input[name=SubTotal]").val(unitPrice);
        $("#add-to-cart-form button").removeAttr("disabled");
        $("#add-to-cart-form input[name=Quantity]").on('keyup change', function () {
            // get the quantity and unit price and multiply -> update subtotal box
            var quantity = $(this).val();
            var unitprice = $("#add-to-cart-form input[name=UnitPrice]").val();
            var subtotal = quantity * unitprice;

            $("#add-to-cart-form input[name=SubTotal]").val(subtotal);
            $("#add-to-cart-form").unbind('submit');
            $("#add-to-cart-form").on('submit', function (event) {
                var Product = getFormInputValues("add-to-cart-form");
                var EnterpriseId = $("#add-to-cart-form input[name=EnterpriseId]").val();
                addToQuotation(Product, EnterpriseId);
                $("#add-to-cart-form").find('input, textarea, button, select').attr('disabled', 'disabled');
                event.preventDefault();
            });
        });

        $("#add-to-order-modal").modal("show");
        event.preventDefault();
    });
    </script>