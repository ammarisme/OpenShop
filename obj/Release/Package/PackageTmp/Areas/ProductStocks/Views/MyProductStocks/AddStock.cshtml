@using ETrading.Models
@using ETrading.Areas.ProductStocks.Models
@model CreateProductStockViewModel
@{
    ViewBag.title = "Add Stock";
}
<title>@ViewBag.title</title>
<h5>@ViewBag.title</h5>
<ul class="nav nav-tabs" style="margin-bottom: 15px;">
    <li class="active"><a href="#products" data-toggle="tab">Products in Stock</a></li>
    <li class=""><a href="#general-information" data-toggle="tab">General Informtion</a></li>
</ul>
<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="products">
        <div class="row">
            <div class="col-md-4 panel custom-panel">
                <h5>Add Product(s) to Stock</h5>
                <form action="no-implemetation" id="products-in-stock-form" method="POST">
                    <div id="name-group" class="form-group">
                        <label for="number" class="custom-label">Product</label>
                        @Html.DropDownListFor(m => m.ProductId,
                                  new SelectList(Model.ProductId,
                               "ProductId", "ProductName",
                                        Model.ProductId.First().ProductId), new { @class = "form-control custom-text-box  custom-label", id = "ProductName" })
                    </div>
                    @*public float QuantityRecieved { get; set; }*@
                    <div id="name-group" class="form-group">
                        <label for="number" class="custom-label">Quantity Recieved</label>
                        <input type="number" class="form-control custom-text-box " name="QuantityRecieved">
                    </div>
                    @*public float QuantityDispatched { get; set; }*@
                    <div id="name-group" class="form-group">
                        <label for="number" class="custom-label" >Quantity Dispatched</label>
                        <input type="number" class="form-control custom-text-box  " name="QuantityDispatched">
                    </div>
                    @*public float Cost { get; set; }*@
                    <div id="name-group" class="form-group">
                        <label for="number" class="custom-label">Cost</label>
                        <input type="number" class="form-control custom-text-box " name="Cost" >
                    </div>
                    @*public string Remarks { get; set; }*@
                    <div id="name-group" class="form-group">
                        <label for="number" class="custom-label">Remarks</label>
                        <input type="text" class="form-control custom-text-box materialize-textarea" name="Remarks" >
                    </div>
                    <button type="submit" class="btn btn-primary btn-raised">Add Product<span class="fa fa-arrow-down"></span></button>
                <button type="button" class="btn btn-default btn-raised" id="removeProduct">Remove Product<span class="fa fa-arrow-right"></span></button>
                </form>
            </div>
            <div class="col-md-7 panel custom-panel">
                <table id="products-in-stock-table" class="table table-hover display table-striped" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Product Id</th>
                            <th>Material Name</th>
                            <th>Quantity Recieved</th>
                            <th>Quantity Dispatched</th>
                            <th>Cost</th>
                            <th>Remarks</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                    </tfoot>
                </table>
            </div>
            <button class="btn btn-primary btn-raised" id="add-stock-button">Add Stock</button>
        </div>

    </div>

    <div class="tab-pane fade" id="general-information">
        <div class="row">
            <div class="panel custom-panel">
                <form action="no-implementation" id="product-stock-form" method="POST">
                    @*public string RecievedDate { get; set; }*@
                    <div id="name-group" class="form-group">
                        <label for="name">RecievedDate</label>
                        <input type="date" name="RecievedDate" class="form-control custom-text-box ">
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>

@section script{
    <script>
        /// Initiating the products-in-stock-table
        var productsInStockTable = initiateTable("products-in-stock-table", {
            "columns": [
            { "data": "ProductId" },
            { "data": "ProductName" },
            { "data": "QuantityRecieved" },
            { "data": "QuantityDispatched" },
            { "data": "Cost" },
            { "data": "Remarks" }
            ],
            "sDom" : "t"
        }); // initiating the table with all the defauls features loaded in this function

        $("#removeProduct").on('click', function () {
            var selectedRowIndex = getTableSelectedRowIndex($("#products-in-stock-table"));
            productsInStockTable.row(selectedRowIndex).remove().draw(false);
        }); //can be used commonly with as a table removal button

        //  Linking the the table and form
        syncFormWithTable("products-in-stock-form", productsInStockTable, "ProductId", function () { }, function () { }); // connecting the table with the form



        // sending the final object
        $("#" + "add-stock-button").on('click', function (event) {
            //        onCompletion(); // before submission
            var submitData = {}; // the data that will be sent using ajax

            var productsInStockData = getTableData(productsInStockTable); // the table that will be attached to the data

            productsInStockTable.clear().draw(false);

            submitData = getFormValues("product-stock-form");

            submitData["ProductsInStock"] = productsInStockData; // adding the materials in datatable

            console.log(submitData); // to make sure we got the the right object going

            $.ajax({
                type: 'post',
                url: "/api/ProductStocks/AddStock",
                data: JSON.stringify(submitData), // need to be strigified to avoid browser hang
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    onCompletion();
                }
            });

            event.preventDefault();
        });

    </script>
}
