@using ETrading.Models
@using ETrading.Areas.RetailOrders.Models
@model CreateRetailOrder
@{
    ViewBag.title = "New Sale!";
}
<title>@ViewBag.title</title>

<h5>@ViewBag.title</h5>
<ul class="nav nav-tabs" style="margin-bottom: 15px;">
    <li class="active"><a href="#products" data-toggle="tab">Products</a></li>
    <li class=""><a href="#delivery" data-toggle="tab">Delivery</a></li>
    <li class=""><a href="#payments" data-toggle="tab">Payments</a></li>
    <li class=""><a href="#general-info" data-toggle="tab">General Information</a></li>
    <li class=""><a href="#customer-information" data-toggle="tab">Customers</a></li>
</ul>
<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="products">
        <div class="row">
                <h5>Add Product(s) to Sale</h5>
            <div class="col-md-5 well sub-content-panel">
                <form action="no-implemetation" id="create-retail-order-product-form" method="POST">

                    @*public int ProductsInOrderId { get; set; }
                        public int OrderId { get; set; }*@
                    <div id="name-group" class="form-group">
                        <label for="name" class="custom-label">Product</label>
                        @Html.DropDownListFor(m => m.ProductId,
                                  new SelectList(Model.ProductId,
                               "ProductId", "ProductName",
                                        Model.ProductId.First().ProductId), new { @class = "form-control", id = "ProductName" })
                    </div>
                    <div id="name-group" class="form-group">
                        <label for="name" class="custom-label">Quantity</label>
                        <input type="text" class="form-control custom-text-box" name="Quantity" >
                    </div>
                    <div id="name-group" class="form-group">
                        <label for="name" class="custom-label">UnitPrice</label>
                        <input type="text" class="form-control custom-text-box" name="UnitPrice" >
                    </div>
                    <div id="name-group" class="form-group">
                        <label for="name" class="custom-label">Description</label>
                        <input type="text" class="form-control custom-text-box" name="Description" >
                    </div>
                    <button type="submit" class="btn btn-primary btn-raised">Add Product<span class="fa fa-arrow-down"></span></button>
                    <button type="button" class="btn btn-default btn-raised" id="removeProduct">Remove Product<span class="fa fa-arrow-right"></span></button>
                </form>
            </div>
            <table id="products-retail-order-table" class="display col-md-6 well sub-content-panel" cellspacing="0">
                <thead>
                    <tr>
                        <th>ProductId</th>
                        <th>ProductName</th>
                        <th>Quantity</th>
                        <th>UnitPrice</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div class="tab-pane fade in" id="general-info">
        <div class="row">
            <form action="no-implementation" id="general-information-form" method="POST">
                <h5>General Information</h5>
                <div id="name-group" class="form-group">
                    <label for="name" class="custom-label">OrderDate</label>
                    <input type="date" name="OrderDate" class="form-control custom-text-box">
                </div>

                <div id="name-group" class="form-group">
                    <label for="name" class="custom-label">OrderStatus</label>
                    <input type="text" name="OrderStatus" class="form-control custom-text-box">
                </div>
                <div id="name-group" class="form-group">
                    <label for="name" class="custom-label">OrderDueDate</label>
                    <input type="date" name="OrderDueDate" class="form-control custom-text-box">
                </div>
            </form>

        </div>
    </div>

    <div class="tab-pane fade in" id="delivery">
        <div class="row">
            <h5>Delivery Information</h5>
            <form action="no-implementation" id="delivery-form" method="POST">
                <div id="name-group" class="form-group">
                    <label for="name" class="custom-label">DeliveredDate</label>
                    <input type="date" name="DeliveredDate" class="form-control custom-text-box" />
                </div>
                <div id="name-group" class="form-group">
                    <label for="name" class="custom-label">DeliveryStatus</label>
                    <input type="text" name="DeliveryStatus" class="form-control custom-text-box" />
                </div>
                <div id="name-group" class="form-group">
                    <label for="name" class="custom-label">Remark</label>
                    <input type="text" name="Remark" class="form-control custom-text-box" />
                </div>
            </form>
        </div>
    </div>
    <div class="tab-pane fade in" id="customer-information">
        <div class="row">
            <h5>Customer Information</h5>
        </div>
    </div>

    <div class="tab-pane fade in" id="payments">
        <div class="row">
            <h5>Payment Information</h5>
        </div>
    </div>
    <button class="btn btn-primary btn-raised" id=" create-retail-order-button">Complete Sale</button>
</div>

@section script{
    <script>
        /// Initiating the specifications-in-materials-table
        var productInRetailOrderTable = initiateTable("products-retail-order-table", {
            "columns": [
            { "data": "ProductId" },
            { "data": "ProductName" },
            { "data": "Quantity" },
            { "data": "UnitPrice" },
            { "data": "Description" }
            ],
            "sDom": "t"
        }); // initiating the table with all the defauls features loaded in this function

        $("#removeProduct").on('click', function () {
            var selectedRowIndex = getTableSelectedRowIndex($("#products-retail-order-table"));
            productInRetailOrderTable.row(selectedRowIndex).remove().draw(false);
        }); //can be used commonly with as a table removal button

        var onCompletion = function () { }; // a dummy functio

        //  Linking the specifications table to specifications form
        syncFormWithTable("create-retail-order-product-form", productInRetailOrderTable, "ProductId", onCompletion, onCompletion); // connecting the table with the form

        // sending the final object

        $("#" + "create-retail-order-button").on('click', function (event) {
            onCompletion(); // before submission
            var submitData = {}; // the data that will be sent using ajax

            var productInRetailOrderData = getTableData(productInRetailOrderTable); // the table that will be attached to the data

            productInRetailOrderTable.clear().draw(false);

            submitData = getFormValues("create-retail-order-form");

            submitData["ProductsRetailOrder"] = productInRetailOrderData; // adding the materials in datatable

            console.log(submitData); // to make sure we got the the right object going

            $.ajax({
                type: 'post',
                url: "/api/RetailOrders/AddOrder",
                data: JSON.stringify(submitData), // need to be strigified to avoid browser hang
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    onCompletion();
                }
            });

            event.preventDefault();
        });

    </script>
}
