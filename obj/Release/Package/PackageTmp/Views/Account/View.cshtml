<table class="table table-striped table-hover" id="quotation-products-table">
    <thead>
        <tr>
            <th>ProductId</th>
            <th>ProductName</th>
            <th>Quantity</th>
            <th>UnitPrice</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<form action="/Api/Quotation/RequestQuotation" method="post" id="quotation">
    <input type="text" class="form-control" id="wholesaler-id" name="WholesalerId" value="@Model.Wholesaler.Id" hidden="hidden">
    <input type="text" class="form-control" id="wholesaler-name" name="WholesalerName" value="@Model.Wholesaler.WholesalerName" disabled>
    <input type="text" class="form-control" id="wholesaler-address" name="WholesalerAddress" value="@Model.Wholesaler.WholesalerAddress" disabled>
    <input type="text" class="form-control" id="retailer-id" name="RetailerId" value="@Model.Retailer.Id" hidden="hidden" disabled>
    <input type="text" class="form-control" id="retailer-name" name="RetailerName" value="@Model.Retailer.RetailerName" disabled>
    <input type="text" class="form-control" id="retailer-address" name="RetailerAddress" placeholder="" value="@Model.Retailer.RetailerAddress">
    <textarea class="form-control" rows="4" id="remark" name="Remark"> </textarea>
    <select id="DeliveryMethod" class="form-control" name="DeliveryMethodId">
        <option value="StorePickup">Store Pickup</option>
        <option value="Aramex">Aramex</option>
        <option value="CSL">CSL</option>
        <option value="SLPost">SL Post</option>
        <option value="LorryTransport">Lorry Transport</option>
        <option value="BusTransport">Bus Transport</option>
        <option value="WholesalerDelivery">Wholesaler delivery</option>
    </select>
    <select id="PaymentMethod" name="PaymentMethodId" class="form-control">
        <option value="Cheque">Cheque</option>
        <option value="Cash">Cash</option>
        <option value="Ez-cash">Ez-Cash</option>
        <option value="BT">Bank Transfer</option>
        <option value="BD">Bank Deposit</option>
    </select>
    <input type="text" class="form-control" id="retailer-address" placeholder="Payment Duration" name="PaymentDuration">
    <button type="submit" id="request-quotation-button" class="btn btn-raised btn-success">Request Quotation</button>
</form>

<script src="~/Scripts/jquery.dataTables.js"></script>
<script>
            @*var products = [];
            var Quotation = getLocalStorageData("Quotation");
            var wholesalerId = "@Model.Wholesaler.Id";*@

    var products = [
        { "ProductId": "1", "ProductName": "1", "Quantity": "1", "UnitPrice": "1" },
        { "ProductId": "1", "ProductName": "1", "Quantity": "1", "UnitPrice": "1" },
        { "ProductId": "1", "ProductName": "1", "Quantity": "1", "UnitPrice": "1" },
        { "ProductId": "1", "ProductName": "1", "Quantity": "1", "UnitPrice": "1" }];

            var quotationProducts = initiateTable("quotation-products-table", {
                    data : products ,
                    "columns": [
                            { "data": "ProductId" },
                            { "data": "ProductName" },
                            { "data": "Quantity" },
                            { "data": "UnitPrice" }
                    ],
                });


        function getTableData(table) {
            var tableData = table.rows().data();
            var rowData = {};

            var i = 0;// current iteration index
            for (var row in tableData) {
                // rowdata has unwanted objects, we are skipping them using length attribute limit
                if (i < tableData.length) {
                    rowData[i] = tableData[i];
                } else {
                    break;
                }
                i++;
            }
            return rowData;
        }

        function getFormValues(formId) {
            var formSelector = "#" + formId + " .form-control";
            var nameAndValues = {};
            $("#" + formId + " select option:selected").each(function () {
                nameAndValues[$(this).parent().attr("id")] = $(this).html();
            });

            $(formSelector).each(function () {
                nameAndValues[$(this).attr("name")] = $(this).val();
            });
            return nameAndValues;
        }

        // sending the Quotation Object to the api
        $("#" + "quotation").on('submit', function (event) {

            var quotationProductsData= getTableData(quotationProducts); // the table that will be attached to the data

            var submitData = getFormValues("quotation");

            submitData["ProductsInQuotation"] = quotationProductsData; // adding the ProductsInQuotation


            $.ajax({
                type: 'post',
                url: "/api/Quotation/RequestQuotation",
                data: JSON.stringify(submitData), // need to be strigified to avoid browser hang
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                }
            });
            event.preventDefault();
        });
</script>


// Web API controller Action
public IHttpActionResult RequestQuotation(Quotation quotation)
        {
            // set quotations status to request
            // add Request for Quotation
            db.Quotations.Add(quotation);

            foreach (ProductInQuotation product in quotation.ProductsInQuotation)
            {
            // add products to quotation
                db.ProductsInQuotations.Add(product);
            }
            db.SaveChanges();
            return StatusCode(HttpStatusCode.Created);
        }