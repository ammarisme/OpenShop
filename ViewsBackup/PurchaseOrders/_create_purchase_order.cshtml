<div class="col-md-12">
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog" data-backdrop="false">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">Close</button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">OK</button>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="col-md-6">
    <form action="../api/MaterialInMaterialsRecieved/Create" id="material-in-purchase-order-form" method="POST">
        <div id="name-group" class="form-group">
            
            @*MaterialInPurchaseOrderId
            PurchaseOrderId*@
            
            @*MaterialId*@
            <label for="name">Material Name</label>
            @Html.DropDownList("MaterialId", new SelectList(ViewBag.materials, "MaterialId", "MaterialName"), htmlAttributes: new { @class = "form-control", id = "MaterialName" })

            @*Quantity*@
            <label for="number">Quantity</label>
            <input type="number" class="form-control" name="Quantity" placeholder="eg :- 100">

            @*UnitCost*@
            <label for="number">UnitCost</label>
            <input type="number" class="form-control" name="UnitCost" placeholder="eg :- 100">

            @*Description*@
            <label for="number">Description</label>
            <input type="text" class="form-control" name="Description" placeholder="eg :- 100">

        </div>
        <button type="submit" class="btn btn-default">Add to P/O<span class="fa fa-arrow-down"></span></button>
    </form>
    <button class="btn btn-warning" id="removeMaterial">Remove Material<span class="fa fa-arrow-right"></span></button>
</div>

<div class="col-md-6 col-sm-12">
    <form action="no-implementation" id="purchase-order-form" method="POST">
        <div id="name-group" class="form-group">
            @*
            autogenerated : PurchaseOrderId
            *@

            @*VendorId*@
            @Html.DropDownList("VendorId", new SelectList(ViewBag.vendors, "VendorId", "Name"), htmlAttributes: new { @class = "form-control", id = "Name" })

            @*CreatedTime*@
            <label for="date">Date</label>
            <input type="datetime" name="RecievedDate" id="CreatedTime" class="form-control" />

            @*Status*@
            
        </div>
    </form>
    <button class="btn btn-success" id="create-purchase-order-button">Create Purchase Order</button>
</div>

<!-- this table stores the rows that is being added from the form-->
<div class="col-md-12 col-sm-12">
    <table id="materials-in-purchase-order-table" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>Material Id</th>
                <th>Material Name</th>
                <th>Quantity</th>
                <th>UnitCost</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody></tbody>
        <tfoot>
            <tr>
                <th>Material Id</th>
                <th>Material Name</th>
                <th>Quantity</th>
                <th>UnitCost</th>
                <th>Description</th>
            </tr>
        </tfoot>
    </table>
</div>


<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
<script>
    viewControllerRoute = "../Material/AddPurchaseOrder"; // where the user is in

    // creating a date picker
    var createdDate = $("#CreatedTime").datepicker();


    /// Initiating the specifications-in-materials-table
    var materialsInPurchaseOrderTable = initiateTable("materials-in-purchase-order-table", {
        "columns": [
                { "data": "MaterialId" },
                { "data": "MaterialName" },
                { "data": "Quantity" },
                { "data": "UnitCost" },
                { "data": "Description" }
        ]
    }); // initiating the table with all the defauls features loaded in this function


    // initiating the material form
    var createPurchaseOrder= $("#purchase-order-form");

    $("#removeMaterial").on('click', function () {
        var selectedRowIndex = getTableSelectedRowIndex($("#materials-in-purchase-order-table"));
        materialsInPurchaseOrderTable.row(selectedRowIndex).remove().draw(false);
    }); //can be used commonly with as a table removal button

    var onCompletion = function () { }; // a dummy functio

    //  Linking the above created form and table
    syncFormWithTable("material-in-purchase-order-form", materialsInPurchaseOrderTable, "MaterialId", onCompletion, onCompletion); // connecting the table with the form

    $("#" + "create-purchase-order-button").on('click', function (event) {
        onCompletion(); // before submission
        var submitData = {}; // the data that will be sent using ajax

        var tableData = getTableData(materialsInPurchaseOrderTable); // the table that will be attached to the data

        materialsInPurchaseOrderTable.clear().draw(false);

        submitData = getFormValues("purchase-order-form");

        submitData["MaterialsInPurchaseOrder"] = tableData; // adding the materials in datatable

        console.log(submitData); // to make sure we got the the right object going

        $.ajax({
            type: 'post',
            url: "/api/PurchaseOrders/AddPurchaseOrder",
            data: JSON.stringify(submitData), // need to be strigified to avoid browser hang
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                onCompletion();
            }
        });

        event.preventDefault();
    });

</script>